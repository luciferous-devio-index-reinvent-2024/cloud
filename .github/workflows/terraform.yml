on:
  push:
    paths-ignore:
      - "**/*.md"
      - ".vscode/**"
      - ".idea/**"
      - ".gitignore"
    branches:
      - "*"
    tags:
      - "v*"

permissions:
  id-token: write
  contents: read

env:
  TF_VAR_SYSTEM_NAME: ${{ vars.SYSTEM_NAME }}
  TF_VAR_REGION: ${{ vars.AWS_REGION }}
  TF_VAR_SSM_PARAMETER_NAME_LAYER_ARN_BASE: ${{ secrets.SSM_PARAMETER_NAME_BASE_LAYER }}
  TF_VAR_SLACK_INCOMING_WEBHOOK_ERROR_NOTIFIER_01: ${{ secrets.SLACK_INCOMING_WEBHOOK_ERROR_NOTIFIER_01 }}
  TF_VAR_S3_BUCKET_DATA: ${{ secrets.S3_BUCKET_DATA }}
  TF_VAR_NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
  TF_VAR_NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
  TF_VAR_CONTENTFUL_TOKEN: ${{ secrets.CONTENTFUL_TOKEN }}

jobs:
  terraform:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.0
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ARN_IAM_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}
      - run: |
          terraform init \
            -backend-config="bucket=$BACKEND_S3_BUCKET" \
            -backend-config="key=$BACKEND_S3_KEY" \
            -backend-config="region=$BACKEND_REGION"
        env:
          BACKEND_S3_BUCKET: ${{ secrets.TF_BACKEND_S3_BUCKET }}
          BACKEND_S3_KEY: cloud/state.json
          BACKEND_REGION: ${{ vars.AWS_REGION }}
      - name: terraform plan
        run: terraform plan
        if: ${{ github.ref_type == 'branch' }}
      - name: terraform apply
        run: terraform apply -auto-approve
        if: ${{ github.ref_type == 'tag' }}
      - name: terraform output
        run: terraform output
        if: ${{ github.ref_type == 'tag' }}

